Program:
#include <stdio.h>
#include <string.h>
#include <conio.h>

int main() {
    int i, j, klen, mlen, flag = 0;
    char input[100], key[30], temp[30], quot[100], rem[30], key1[30];
    printf("\n Enter Data : ");
    scanf("%[^'\n']s", input);
    printf("\n Enter key : ");
    scanf("%[^'\n']s", key);
    klen = strlen(key);
    mlen = strlen(input);
    strcpy(key1, key);
    for (i = 0; i < klen - 1; i++) {
        input[mlen + i] = '0';
    }
    for (i = 0; i < klen; i++) {
        temp[i] = input[i];
    }

for (i=0; i< magen; i++) {
    quot[i] = temp[0];
    if (quot[i] == '0') {
        for (j=0; j < keylen; j++) {
            key[j] = '0';
        }
    } 
    else {
        for (j=0; j < keylen; j++) {
            k[j] = key1[j] -;
            for (c = keylen - 1; j > 0; j--) {
                if (temp[j] = key[j]) {
                    rem[j - 1] = '0';
                } 
                else {
                    sum[j - 1] = 'i';
                }
            }
        }
    }
    rem[keylen - 1] = input[i + keylen];
    strcpy(temp, rem);
}

strcpy(rem, temp);
printf("In quotient is ");
for (i=0; i< magen; i++) {
    printf("%c", quot[i]);
}
printf("In remainder is ");
for (i=0; i < keylen - 1; i++) {
    printf("%c", sum[i]);
}
printf("In final data is: ");
for (i=0; i<mglen; i++)
    printf("%c", input[i]);
for (i=0; i<keylen-1; i++)
    printf("%c", rem[i]);
printf("\n");
char temp[20];
printf("Enter received data: ");
scanf("%s", temp1);
for (i=0; i<keylen; i++)
    temp[i] = temp1[i];
for (i=0; i<mglen; i++)
{
    quot[i] = temp[0];
    if (quot[i] == '0')
        for (j=0; j<keylen; j++)
            key[j] = '0';
    else
        for (j=0; j<keylen; j++)
            key[j] = key1[j];
    for (j=keylen-1; j>0; j--) {
        if (temp[j] == key[j])
            rem[j] = '0';
        else
            rem[j] = '1';
    }
}
for (rem[keylen-1] = temp1[i+keylen];
    strcpy(temp, rem);
strcpy(rem_temp);
printf("n quotient is: ");
for(i=0; i<mslen; i++);
printf(":c", q[i]);
printf("n remainder is: ");
for(i=0; i<kylen-1; i++);
printf(":c", q[i]);
flag=0;
for(i=0; j<kylen-1; i++);
if(rem[i] == '1') {
    flag = 1;
    break;
} else
    flag = 0;

if(flag == 0)
    printf("In no error ");
else
    printf("In error is detected ");
getch();
return 0;
}}
