#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<time.h>
int n,r;
struct frame{
	char ack;
	int data;
}frm[10];
int sender(void);
void recvack(void);
void resend_gb(void);
void goback(void);
void resend_sr(void);
void selrep(void);
int main()
{ 
	int c;
	do{	printf("\n\n1.Selective Repeat ARQ\n 2.Go-Back-N ARQ\n3.Exit");
	printf("\nEnter your choice: ");
	scanf("%d",&c);
	switch(c){
		case 1:selrep();
			   break;
		case 2: goback();
		 	    break;
		case 3: exit(0);
		default: printf("Invalid choice.Try again!\n");
		}
	}while (c>=1 &&c<=3);
	return 0;
}
int sender(){
	
	printf("Enter the number of packets to be sent: ");
	scanf("%d",&n);
	for (int i=1; i<=n; i++){
		printf("Enter data for packet[%d]:",i);
		scanf("%d",&frm[i].data);
		frm[i].ack='y';
		}
		return 0;
}
	
void recvack(){

	srand(time(NULL));
	r=rand()%n+1;
	frm[r].ack='n';
	for(int i=1; i<=n; i++)
	{	if(frm[i].ack=='n') {
		printf("\nThe packet number %d is not recieved.\n",r);	
			}
	}
}
void resend_gb(){

	printf("Resending from packet %d...\n",r);
	for(int i=r; i<=n; i++){
		sleep(1);
	frm[i].ack='y';
	printf("Recieved data of packet %d is %d\n",i,frm[i].data);
	}
	
}

void goback(){
	sender();
	recvack();
	resend_gb();
	printf("\nAll pacjets sent succuessfully using Go-Back_N ARQ.\n");
	}

void resend_sr(){
	printf("Resending packet %d...\n",r);
	sleep(2);
	frm[r].ack='y';
	printf("Recieved data of packet %d is %d\n",r,frm[r].data);
}

void selrep(){
	sender();
	recvack();
	resend_sr();
	printf("\nAll packets sent succuessfully using Selective Repeat ARQ.\n");
}
