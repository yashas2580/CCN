#include <stdio.h>

void main() {
    int data[8], rec[8]; // use index 1 to 7
    int i, c, c1, c2, c3;

    // Input original 4 bits
    printf("Enter 4 bits of data one by one (D3, D5, D6, D7):\n");
    scanf("%d %d %d %d", &data[3], &data[5], &data[6], &data[7]);

    // Calculate parity bits
    data[1] = data[3] ^ data[5] ^ data[7]; // P1
    data[2] = data[3] ^ data[6] ^ data[7]; // P2
    data[4] = data[5] ^ data[6] ^ data[7]; // P4

    printf("Parity bits: P1=%d, P2=%d, P4=%d\n", data[1], data[2], data[4]);

    printf("Encoded data is: ");
    for(i = 7; i >= 1; i--) {
        printf("%d", data[i]);
    }
    printf("\n");

    // Input received bits
    printf("Enter the received 7 bits one by one (bit 7 to bit 1):\n");
    for(i = 7; i >= 1; i--) {
        scanf("%d", &rec[i]);
    }

    // Check parity
    c1 = rec[1] ^ rec[3] ^ rec[5] ^ rec[7];
    c2 = rec[2] ^ rec[3] ^ rec[6] ^ rec[7];
    c3 = rec[4] ^ rec[5] ^ rec[6] ^ rec[7];

    c = (c3 * 4) + (c2 * 2) + c1;

    if (c == 0) {
        printf("No error in received data.\n");
    } else {
        printf("Error at position: %d\n", c);
        printf("Received data: ");
        for(i = 7; i >= 1; i--) {
            printf("%d", rec[i]);
        }
        printf("\n");

        // Correct the error
        rec[c] = rec[c] ^ 1;

        printf("Corrected data: ");
        for(i = 7; i >= 1; i--) {
            printf("%d", rec[i]);
        }
        printf("\n");
    }
}
